// <auto-generated />
using System;
using JobTracking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobTracking.Migrations
{
    [DbContext(typeof(JobTrackingContext))]
    [Migration("20210831055344_Initial_Task_Migrations")]
    partial class Initial_Task_Migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobTracking.Models.Task", b =>
                {
                    b.Property<int>("TaskID")
                        .HasColumnType("int");

                    b.Property<string>("Bookmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorUserID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerUserID")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("StatusChangedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Taskname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TaskID");

                    b.HasIndex("CreatorUserID");

                    b.HasIndex("OwnerUserID");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("JobTracking.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("JobTracking.Models.Task", b =>
                {
                    b.HasOne("JobTracking.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUserID");

                    b.HasOne("JobTracking.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUserID");

                    b.Navigation("Creator");

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
